
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Infinix
 */
public class menuAnggota3 extends javax.swing.JDialog {

    private final Connection conn;

    public String getIdAnggota() {
        return idAnggota;
    }

    public String getNamaAnggota() {
        return namaAnggota;
    }

    public String getEmailAnggota() {
        return emailAnggota;
    }

    public String getTeleponAnggota() {
        return teleponAnggota;
    }

    private String idAnggota;
    private String namaAnggota;
    private String emailAnggota;
    private String teleponAnggota;
    
    public menuAnggota3(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        conn= koneksi.getKoneksi();
        setTableModel();
        loadData();
        actionButton();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtSearch.setFont(new java.awt.Font("Rockwell", 2, 12)); // NOI18N
        txtSearch.setText("Search");
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel13.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 153, 153));
        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\image\\icons8-people-32.png")); // NOI18N
        jLabel13.setText("Data Anggota Perpustakaan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(txtSearch))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(26, 26, 26)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:\
        searchData();
    }//GEN-LAST:event_txtSearchKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuAnggota3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuAnggota3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuAnggota3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuAnggota3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                menuAnggota3 dialog = new menuAnggota3(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables


    
    private void setTableModel() {
        DefaultTableModel model = new DefaultTableModel(
        new Object[]{"ID","Nama","Email","Telepon"},
                0
        );
        
        jTable1.setModel(model);
    }

    private void getData(DefaultTableModel  model) {
       model.setRowCount(0);
        
        try{
            String sql = "SELECT * FROM anggota";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet  rs = st.executeQuery();
                
                while (rs.next()){
                    String idAnggota = rs.getString("id_anggota");
                    String namaAnggota = rs.getString("nama_anggota");
                    String emailAnggota = rs.getString("email");
                    String teleponAnggota = rs.getString("telepon");

                    
                    Object[] rowData = {idAnggota,namaAnggota,emailAnggota,teleponAnggota};
                    model.addRow(rowData);
                    
                }
            }
        }catch (SQLException e) {
            Logger.getLogger(menuAnggota.class.getName()).log(Level.SEVERE, null, e);
            
        }
            }
    
    private void searchData() {
        String kataKunci = txtSearch.getText();
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        try{
            String sql = "SELECT * FROM anggota WHERE nama_anggota LIKE ? OR email LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, "%" + kataKunci + "%");
            st.setString(2, "%" + kataKunci + "%");
            ResultSet rs = st.executeQuery();
            
            while (rs.next()){
                String idAnggota = rs.getString("id_anggota");
                String namaAnggota = rs.getString("nama_anggota");
                String emailAnggota = rs.getString("email");
            String teleponAnggota = rs.getString("telepon");

                
                Object[] rowData = {idAnggota,namaAnggota,emailAnggota,teleponAnggota};
                model.addRow(rowData);
            }
            
            rs.close();
            st.close();
        
    } catch (SQLException e) {
        Logger.getLogger(menuAnggota.class.getName()).log(Level.SEVERE, null, e);
    
}       
    }

    private void loadData() {
        getData((DefaultTableModel) jTable1.getModel());
    }

    private void actionButton() {
        txtSearch.addKeyListener(new KeyAdapter(){
            @Override
            public void keyReleased(KeyEvent e){
                searchData();
            }
        });
        
        jTable1.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e) {
                pilihData();
        }

            });
    }
    
    private void pilihData() {
            int row = jTable1.getSelectedRow();
            
            
            idAnggota   = jTable1.getValueAt(row, 0).toString();
            namaAnggota = jTable1.getValueAt(row, 1).toString();
            emailAnggota = jTable1.getValueAt(row, 2).toString();
            teleponAnggota = jTable1.getValueAt(row, 3).toString();
            
            dispose();

            }
}



